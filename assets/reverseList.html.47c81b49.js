import{e as n}from"./app.d7a97c50.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},e=n(`<h1 id="\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a> \u53CD\u8F6C\u94FE\u8868</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u7ED9\u4F60\u5355\u94FE\u8868\u7684\u5934\u8282\u70B9 head \uFF0C\u8BF7\u4F60\u53CD\u8F6C\u94FE\u8868\uFF0C\u5E76\u8FD4\u56DE\u53CD\u8F6C\u540E\u7684\u94FE\u8868\u3002</p><h4 id="\u793A\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-1" aria-hidden="true">#</a> \u793A\u4F8B 1\uFF1A</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Ahead = [1,2,3,4,5]
\u8F93\u51FA\uFF1A[5,4,3,2,1]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u793A\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-2" aria-hidden="true">#</a> \u793A\u4F8B 2\uFF1A</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Ahead = [1,2]
\u8F93\u51FA\uFF1A[2,1]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u793A\u4F8B-3" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-3" aria-hidden="true">#</a> \u793A\u4F8B 3\uFF1A</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Ahead = []
\u8F93\u51FA\uFF1A[]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A\uFF1A</p><p>\u94FE\u8868\u4E2D\u8282\u70B9\u7684\u6570\u76EE\u8303\u56F4\u662F [0, 5000] -5000 &lt;= Node.val &lt;= 5000=</p></div><h2 id="\u9898\u89E3" tabindex="-1"><a class="header-anchor" href="#\u9898\u89E3" aria-hidden="true">#</a> \u9898\u89E3</h2><div class="custom-container tip"><p class="custom-container-title">\u89E3\u9898\u601D\u8DEF</p><p>\u5229\u7528 <code>\u6808</code> \u5148\u8FDB\u540E\u51FA\u7684\u601D\u60F3\u3002</p><ul><li>\u5C06\u94FE\u8868\u538B\u6808</li><li>\u5982\u679C\u6808\u4E3A\u7A7A\uFF0C\u8FD4\u56DE <code>null</code></li><li>\u904D\u5386\u6808\uFF0C\u6BCF\u6B21\u53D6\u51FA\u6808\u9876\u5143\u7D20\uFF0C\u62FC\u63A5\u6210\u65B0\u94FE\u8868\u8FD4\u56DE\u5373\u53EF</li></ul></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u6808\u4E2D\u5B58\u7684\u662F\u7FFB\u8F6C\u524D\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\uFF0C\u6700\u540E\u9700\u8981\u5C06\u5B83\u7684 <code>next</code> \u8BBE\u7F6E\u4E3A <code>null</code>\uFF0C\u907F\u514D\u5F62\u6210 <code>\u73AF</code>\u3002</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Definition for singly-linked list.
 * function ListNode(val, next) <span class="token punctuation">{</span>
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * <span class="token punctuation">}</span>
 */</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>ListNode<span class="token punctuation">}</span> head
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>ListNode<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span><span class="token punctuation">(</span>head<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6808\uFF0C\u5B58\u8282\u70B9</span>
  <span class="token keyword">const</span> stack<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5C06\u8282\u70B9\u5165\u6808</span>
  <span class="token keyword">let</span> preNode<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> head
  <span class="token keyword">while</span><span class="token punctuation">(</span>preNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>preNode<span class="token punctuation">)</span>
    preNode <span class="token operator">=</span> preNode<span class="token punctuation">.</span>next <span class="token operator">||</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u6808\u5185\u662F\u7A7A\uFF0C\u8BF4\u660E\u94FE\u8868\u662F\u7A7A\uFF0C\u8FD4\u56DEnull</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token comment">// \u62FC\u63A5\u8282\u70B9\uFF0C\u5F62\u6210\u65B0\u6808</span>
  <span class="token keyword">let</span> pre <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> newHead <span class="token operator">=</span> pre
  <span class="token keyword">while</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pre<span class="token punctuation">.</span>next <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    pre <span class="token operator">=</span> pre<span class="token punctuation">.</span>next
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6700\u540E\u4E00\u4E2A\u8282\u70B9\u5B58\u7684\u662F\u539F\u59CB\u5934\u7ED3\u70B9\uFF0C\u9700\u8981\u5C06\u5176next\u7F6E\u6210\u7A7A\uFF0C\u5426\u5219\u4F1A\u53D8\u6210\u73AF</span>
  pre<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> newHead
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div>`,14);function p(t,c){return e}var r=s(a,[["render",p]]);export{r as default};
