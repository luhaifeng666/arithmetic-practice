import{e as n}from"./app.39b8df24.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u98A0\u5012\u4E8C\u8FDB\u5236\u4F4D" tabindex="-1"><a class="header-anchor" href="#\u98A0\u5012\u4E8C\u8FDB\u5236\u4F4D" aria-hidden="true">#</a> \u98A0\u5012\u4E8C\u8FDB\u5236\u4F4D</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u98A0\u5012\u7ED9\u5B9A\u7684 32 \u4F4D\u65E0\u7B26\u53F7\u6574\u6570\u7684\u4E8C\u8FDB\u5236\u4F4D\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A\uFF1A</p><p>\u8BF7\u6CE8\u610F\uFF0C\u5728\u67D0\u4E9B\u8BED\u8A00\uFF08\u5982 Java\uFF09\u4E2D\uFF0C\u6CA1\u6709\u65E0\u7B26\u53F7\u6574\u6570\u7C7B\u578B\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u8F93\u5165\u548C\u8F93\u51FA\u90FD\u5C06\u88AB\u6307\u5B9A\u4E3A\u6709\u7B26\u53F7\u6574\u6570\u7C7B\u578B\uFF0C\u5E76\u4E14\u4E0D\u5E94\u5F71\u54CD\u60A8\u7684\u5B9E\u73B0\uFF0C\u56E0\u4E3A\u65E0\u8BBA\u6574\u6570\u662F\u6709\u7B26\u53F7\u7684\u8FD8\u662F\u65E0\u7B26\u53F7\u7684\uFF0C\u5176\u5185\u90E8\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F\u90FD\u662F\u76F8\u540C\u7684\u3002 \u5728 Java \u4E2D\uFF0C\u7F16\u8BD1\u5668\u4F7F\u7528\u4E8C\u8FDB\u5236\u8865\u7801\u8BB0\u6CD5\u6765\u8868\u793A\u6709\u7B26\u53F7\u6574\u6570\u3002\u56E0\u6B64\uFF0C\u5728 <code>\u793A\u4F8B 2</code> \u4E2D\uFF0C\u8F93\u5165\u8868\u793A\u6709\u7B26\u53F7\u6574\u6570 <code>-3</code>\uFF0C\u8F93\u51FA\u8868\u793A\u6709\u7B26\u53F7\u6574\u6570 <code>-1073741825</code>\u3002</p></div><h4 id="\u793A\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-1" aria-hidden="true">#</a> \u793A\u4F8B 1\uFF1A</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1A\`n = 00000010100101000001111010011100\` &lt;br&gt;
\u8F93\u51FA\uFF1A\`964176192\` (00111001011110000010100101000000) &lt;br&gt;
\u89E3\u91CA\uFF1A\u8F93\u5165\u7684\u4E8C\u8FDB\u5236\u4E32 \`00000010100101000001111010011100\` \u8868\u793A\u65E0\u7B26\u53F7\u6574\u6570 \`43261596\`\uFF0C&lt;br&gt;
\u56E0\u6B64\u8FD4\u56DE \`964176192\`\uFF0C\u5176\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F\u4E3A \`00111001011110000010100101000000\`\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u793A\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-2" aria-hidden="true">#</a> \u793A\u4F8B 2\uFF1A</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1A\`n = 11111111111111111111111111111101\`
\u8F93\u51FA\uFF1A\`3221225471\` (10111111111111111111111111111111)
\u89E3\u91CA\uFF1A\u8F93\u5165\u7684\u4E8C\u8FDB\u5236\u4E32 \`11111111111111111111111111111101\` \u8868\u793A\u65E0\u7B26\u53F7\u6574\u6570 \`4294967293\`\uFF0C
\u56E0\u6B64\u8FD4\u56DE \`3221225471\` \u5176\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F\u4E3A \`10111111111111111111111111111111\` \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A\uFF1A</p><p>\u8F93\u5165\u662F\u4E00\u4E2A\u957F\u5EA6\u4E3A <code>32</code> \u7684\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32</p></div><h2 id="\u89E3\u6CD5\u4E00" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5\u4E00" aria-hidden="true">#</a> \u89E3\u6CD5\u4E00</h2><div class="custom-container tip"><p class="custom-container-title">\u89E3\u9898\u601D\u8DEF</p><p>\u5C06\u4F20\u5165\u7684\u6570\u5B57\u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u683C\u5F0F\uFF0C\u5982\u679C\u4E0D\u8DB332\u4F4D\uFF0C\u5219\u524D\u9762\u7A7A\u4F59\u7684\u4F4D\u7F6E\u75280\u8865\u9F50\u3002<br> \u4E4B\u540E\u5C06\u4E8C\u8FDB\u5236\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u683C\u5F0F\uFF0C\u5E76\u901A\u8FC7\u7FFB\u8F6C\u5B57\u7B26\u4E32\u7684\u65B9\u5F0F\uFF0C\u5C06\u6700\u7EC8\u7ED3\u679C\u91CD\u65B0\u8F6C\u6362\u4E3A\u6570\u5B57\u5373\u53EF\u3002</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> n - a positive integer
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> - a positive integer
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reverseBitsByString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token comment">// \u88650</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">)</span> str <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">+</span> str
  <span class="token keyword">const</span> strList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u7FFB\u8F6C\u5B57\u7B26\u4E32</span>
  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>strList<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u89E3\u6CD5\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5\u4E8C" aria-hidden="true">#</a> \u89E3\u6CD5\u4E8C</h2><div class="custom-container tip"><p class="custom-container-title">\u89E3\u9898\u601D\u8DEF</p><p>\u5229\u7528 <code>\u53CC\u6307\u9488</code> \u7684\u65B9\u5F0F\u3002<br> \u5C06\u4F20\u5165\u7684\u6570\u5B57\u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u683C\u5F0F\uFF0C\u5982\u679C\u4E0D\u8DB332\u4F4D\uFF0C\u5219\u524D\u9762\u7A7A\u4F59\u7684\u4F4D\u7F6E\u75280\u8865\u9F50\u3002<br> \u5C06\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6570\u7EC4\uFF0C\u5728\u5934\u5C3E\u5404\u653E\u7F6E\u4E00\u4E2A\u6307\u9488\uFF0C\u904D\u5386\u6570\u7EC4\uFF0C\u4EA4\u6362\u5934\u5C3E\u6307\u9488\u7684\u503C\u3002<br> \u5C06\u8F6C\u6362\u5B8C\u6210\u7684\u6570\u7EC4\u53D8\u6210\u5B57\u7B26\u4E32\uFF0C\u5E76\u91CD\u65B0\u8F6C\u6362\u4E3A\u6570\u5B57\u5373\u53EF\u3002</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 *
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> n - a positive integer
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> - a positive integer
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reverseBits</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token comment">// \u88650</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">)</span> str <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">+</span> str
  <span class="token keyword">const</span> strList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u53CC\u6307\u9488</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> strList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">[</span>strList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> strList<span class="token punctuation">[</span>strList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>strList<span class="token punctuation">[</span>strList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> strList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>strList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,15);function t(e,o){return p}var r=s(a,[["render",t]]);export{r as default};
