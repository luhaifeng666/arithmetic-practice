import{e as n}from"./app.7b1a4788.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u590D\u6570\u4E58\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u590D\u6570\u4E58\u6CD5" aria-hidden="true">#</a> \u590D\u6570\u4E58\u6CD5</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u590D\u6570 \u53EF\u4EE5\u7528\u5B57\u7B26\u4E32\u8868\u793A\uFF0C\u9075\u5FAA <code>&quot;\u5B9E\u90E8+\u865A\u90E8i&quot;</code> \u7684\u5F62\u5F0F\uFF0C\u5E76\u6EE1\u8DB3\u4E0B\u8FF0\u6761\u4EF6\uFF1A</p><ul><li>\u5B9E\u90E8 \u662F\u4E00\u4E2A\u6574\u6570\uFF0C\u53D6\u503C\u8303\u56F4\u662F [-100, 100]</li><li>\u865A\u90E8 \u4E5F\u662F\u4E00\u4E2A\u6574\u6570\uFF0C\u53D6\u503C\u8303\u56F4\u662F [-100, 100]</li><li>i ^ 2 == -1 \u7ED9\u4F60\u4E24\u4E2A\u5B57\u7B26\u4E32\u8868\u793A\u7684\u590D\u6570 <code>num1</code> \u548C <code>num2</code> \uFF0C\u8BF7\u4F60\u9075\u5FAA\u590D\u6570\u8868\u793A\u5F62\u5F0F\uFF0C\u8FD4\u56DE\u8868\u793A\u5B83\u4EEC\u4E58\u79EF\u7684\u5B57\u7B26\u4E32\u3002</li></ul><p></p><h4 id="\u793A\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-1" aria-hidden="true">#</a> \u793A\u4F8B 1\uFF1A</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anum1 = &quot;1+1i&quot;, num2 = &quot;1+1i&quot;
\u8F93\u51FA\uFF1A&quot;0+2i&quot;
\u89E3\u91CA\uFF1A(1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i \uFF0C\u4F60\u9700\u8981\u5C06\u5B83\u8F6C\u6362\u4E3A 0+2i \u7684\u5F62\u5F0F\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="\u793A\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-2" aria-hidden="true">#</a> \u793A\u4F8B 2\uFF1A</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anum1 = &quot;1+-1i&quot;, num2 = &quot;1+-1i&quot;
\u8F93\u51FA\uFF1A&quot;0+-2i&quot;
\u89E3\u91CA\uFF1A(1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i \uFF0C\u4F60\u9700\u8981\u5C06\u5B83\u8F6C\u6362\u4E3A 0+-2i \u7684\u5F62\u5F0F\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A\uFF1A</p><p>num1 \u548C num2 \u90FD\u662F\u6709\u6548\u7684\u590D\u6570\u8868\u793A\u3002</p></div><h2 id="\u9898\u89E3" tabindex="-1"><a class="header-anchor" href="#\u9898\u89E3" aria-hidden="true">#</a> \u9898\u89E3</h2><div class="custom-container tip"><p class="custom-container-title">\u89E3\u9898\u601D\u8DEF</p><ul><li>\u5148\u5C06\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32\u8FDB\u884C\u62C6\u5206\uFF0C\u5F97\u5230\u5B9E\u6570\u4E0E\u865A\u6570</li><li>\u5206\u522B\u5B9A\u4E49\u6700\u540E\u8868\u8FBE\u5F0F\u7684\u5B9E\u90E8 <code>real</code> \u4E0E\u865A\u90E8 <code>virtual</code></li><li>\u5229\u7528\u53CC\u91CD\u5FAA\u73AF\uFF0C\u5404\u9879\u4F9D\u6B21\u76F8\u4E58 <ul><li>\u5982\u679C\u90FD\u662F\u5B9E\u6570\uFF0C\u5219\u4E0E <code>real</code> \u6C42\u548C\u5E76\u4FDD\u5B58</li><li>\u5982\u679C\u90FD\u662F\u865A\u6570\uFF0C\u5219\u5148\u5C06\u8868\u8FBE\u5F0F\u4E2D\u7684\u6570\u5B57\u76F8\u4E58\uFF0C\u518D\u4E58\u4EE5 -1\uFF0C\u6700\u7EC8\u4E0E <code>real</code> \u6C42\u548C\u5E76\u4FDD\u5B58</li><li>\u5982\u679C\u4E00\u5B9E\u4E00\u865A\uFF0C\u5219\u5C06\u6570\u5B57\u7684\u4E58\u79EF\u4E0E <code>virtual</code> \u6C42\u548C\u5E76\u4FDD\u5B58</li></ul></li><li>\u6700\u7EC8\u8FD4\u56DE <code>real + virtual + i</code> \u7684\u5F62\u5F0F\u5373\u53EF</li></ul></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u590D\u6570\u4E58\u6CD5
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> num1
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> num2
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">getNumbers</span> <span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> list <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> list
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span><span class="token punctuation">(</span>num1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> num2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nums1 <span class="token operator">=</span> <span class="token function">getNumbers</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span>
  <span class="token keyword">const</span> nums2 <span class="token operator">=</span> <span class="token function">getNumbers</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span>
  <span class="token keyword">let</span> real <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> virtual <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> isNumber1 <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> isNumber2 <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>nums2<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token comment">// \u90FD\u662F\u6570\u5B57</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isNumber1 <span class="token operator">&amp;&amp;</span> isNumber2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        real <span class="token operator">+=</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> nums2<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5176\u4E2D\u4E00\u4E2A\u662F\u865A\u6570</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>isNumber1 <span class="token operator">&amp;&amp;</span> isNumber2<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>isNumber1 <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isNumber2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        virtual <span class="token operator">+=</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>nums2<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u90FD\u662F\u865A\u6570</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNumber1 <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isNumber2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        real <span class="token operator">+=</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>nums2<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>real<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">+</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>virtual<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">i</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>`,13);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
