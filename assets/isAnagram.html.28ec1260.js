import{e as n}from"./app.36976403.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<h1 id="\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD" tabindex="-1"><a class="header-anchor" href="#\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD" aria-hidden="true">#</a> \u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32 s \u548C t \uFF0C\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u5224\u65AD t \u662F\u5426\u662F s \u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u3002<br></p><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F\uFF1A</p><p>\u82E5\xA0s \u548C t\xA0\u4E2D\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u90FD\u76F8\u540C\uFF0C\u5219\u79F0\xA0s \u548C t\xA0\u4E92\u4E3A\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u3002</p></div><h4 id="\u793A\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-1" aria-hidden="true">#</a> \u793A\u4F8B\xA01:</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: s = &quot;anagram&quot;, t = &quot;nagaram&quot;
\u8F93\u51FA: true
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u793A\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B-2" aria-hidden="true">#</a> \u793A\u4F8B 2:</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: s = &quot;rat&quot;, t = &quot;car&quot;
\u8F93\u51FA: false
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A:</p><p>1 &lt;= s.length, t.length &lt;= 5 * 10 ^ 4 s \u548C t\xA0\u4EC5\u5305\u542B\u5C0F\u5199\u5B57\u6BCD</p></div><h2 id="\u89E3\u6CD5\u4E00" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5\u4E00" aria-hidden="true">#</a> \u89E3\u6CD5\u4E00</h2><div class="custom-container tip"><p class="custom-container-title">\u89E3\u9898\u601D\u8DEF</p><ul><li>\u5148\u5C06\u4E24\u4E2A\u5B57\u7B26\u4E32\u8FDB\u884C\u6392\u5E8F</li><li>\u7136\u540E\u6BD4\u5BF9\u6BCF\u4E00\u4F4D\u4E0A\u7684\u5B57\u7B26\u662F\u5426\u76F8\u7B49\uFF0C\u5982\u679C\u5176\u4E2D\u4E00\u4F4D\u4E0D\u76F8\u7B49\uFF0C\u5219\u662F <code>false</code>, \u5426\u5219\u4E3A <code>true</code></li></ul></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> strSort <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> isAnagram <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> t<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u957F\u5EA6\u4E0D\u4E00\u6837\uFF0C\u5219\u5FC5\u7136\u8FD4\u56DEfalse</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">!==</span> t<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token comment">// \u6392\u5E8F\u4E4B\u540E\uFF0C\u6BD4\u8F83\u6BCF\u4E2A\u4F4D\u7F6E\u4E0A\u7684\u5B57\u7B26\u662F\u5426\u76F8\u540C\uFF0C\u662F\u5219\u662Ftrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse</span>
  <span class="token keyword">const</span> sStrs <span class="token operator">=</span> <span class="token function">strSort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
  <span class="token keyword">const</span> tStrs <span class="token operator">=</span> <span class="token function">strSort</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token keyword">return</span> sStrs<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> str <span class="token operator">===</span> tStrs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u89E3\u6CD5\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5\u4E8C" aria-hidden="true">#</a> \u89E3\u6CD5\u4E8C</h2><div class="custom-container tip"><p class="custom-container-title">\u89E3\u9898\u601D\u8DEF</p><ul><li>\u5C06\u5B57\u7B26\u4E32\u51FA\u73B0\u7684\u5B57\u7B26\u53CA\u5BF9\u5E94\u51FA\u73B0\u7684\u6B21\u6570\u5B58\u6210\u5BF9\u8C61</li><li>\u4E4B\u540E\u7528\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u904D\u5386\u4E0E\u4E4B\u6BD4\u5BF9\uFF0C\u5982\u679C\u51FA\u73B0\u7684\u6B21\u6570\u4E00\u81F4\uFF0C\u5219\u4E3A <code>true</code>, \u5426\u5219\u4E3A <code>false</code></li></ul></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> isAnagramByMap <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> t<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u957F\u5EA6\u4E0D\u4E00\u6837\uFF0C\u5219\u5FC5\u7136\u8FD4\u56DEfalse</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">!==</span> t<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token comment">// \u5B58\u51FA\u73B0\u6B21\u6570\u7684\u6620\u5C04\u5173\u7CFB</span>
  <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">[</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> map<span class="token punctuation">[</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">?</span> map<span class="token punctuation">[</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> map<span class="token punctuation">[</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>num <span class="token operator">=&gt;</span> <span class="token operator">!</span>num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,15);function p(e,o){return t}var u=s(a,[["render",p]]);export{u as default};
